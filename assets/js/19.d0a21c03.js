(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{498:function(s,e,t){s.exports=t.p+"assets/img/push.0e921b7b.jpg"},542:function(s,e,t){"use strict";t.r(e);var a=t(6),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("前段趁着活动买了个腾讯云服务器，一直没抽时间去折腾，最近才开始部署了一个自己专属的git仓库，实现代码自动发布部署功能。（我也想成为努力向上，积极进取的有志青年啊！）文章的内容基本都是参考自谷歌搜索，然后按我的思路重新整理一遍，既是为了分享也是为了巩固知识。\n我也是第一次折腾服务器，前期部署就不写太详细了，装个git是必须的吧？（滑稽笑）")]),s._v(" "),a("h2",{attrs:{id:"创建git用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建git用户"}},[s._v("#")]),s._v(" 创建git用户")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 创建git用户\nadduser git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("添加git权限成员")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 创建/home/git/.ssh/authorized_keys 文件（通过这种方式能使拥有公钥的成员直接访问仓库）\nmkdir /home/git/.ssh\ncd /home/git/.ssh\ntouch authorized_keys\n# 使用vim命令将公钥添加到authorized_keys文件里面，没有vim的话可自行安装\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("生成公钥的方法可查看 "),a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5",target:"_blank",rel:"noopener noreferrer"}},[s._v("git官方文档"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"初始化仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[s._v("#")]),s._v(" 初始化仓库")]),s._v(" "),a("p",[s._v("创建一个存放git仓库的文件夹")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir /web/git\ncd /web/git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("初始化仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git init --bare website.git\n# 注意 这里有个坑 因为我们初始化的时候是处于root管理员状态，所以需要将这个仓库的文件权限设置为刚才创建的git用户\n# 否则的话后面push将没有权限\nchown -R git website.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("git init正常初始化仓库会显示项目文件结构，里面存在.git文件夹。而这里添加--bare参数生成裸仓库，里面的项目文件结构隐藏，将正常方式初始化的.git里面文件结构暴露出来。")])]),s._v(" "),a("p",[s._v("生成项目仓库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mkdir /web/www\ncd /web/www\n# 将刚才初始化的裸仓库克隆到项目文件夹\ngit clone /web/git/website.git\n# 在这里，还是别忘了要给项目文件夹加上git用户操作权限\nchown -R git website\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("到这一步的时候代码仓库已经基本初始化完成了，接下来试试将仓库从线上克隆下来。")]),s._v(" "),a("h2",{attrs:{id:"克隆仓库到本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库到本地"}},[s._v("#")]),s._v(" 克隆仓库到本地")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 通过ip地址从配置好的线上仓库拉取下来\ngit clone git@118.24.217.XXX:/web/git/website.git\n# 如果有配置域名的话也可以通过域名拉取\ngit clone git@www.XXX.XXX:/web/git/website.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("刚开始的时候因为已经添加了本地的密钥到线上git服务器，所以这一步是不需要密码的，直接能克隆下来。")]),s._v(" "),a("h2",{attrs:{id:"创建文件并上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建文件并上传"}},[s._v("#")]),s._v(" 创建文件并上传")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 打开刚才克隆下来的本地仓库\ncd website\n# 创建README.md文件\ntouch README.md\ngit add .\ngit commit -am"创建README.md文件"\ngit push\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("啧啧 完美 到这一步的时候就上传成功了！\n接下来就开始重头戏，我们需要设置git的post-receive钩子，在push成功的时候运行我们设置的一系列命令，进而达到自动编译更新线上代码。")]),s._v(" "),a("h2",{attrs:{id:"添加post-receive钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加post-receive钩子"}},[s._v("#")]),s._v(" 添加post-receive钩子")]),s._v(" "),a("p",[s._v("回到线上服务器，我们打开/web/git/website.git/hooks文件夹。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 生成post-receive文件\ntouch post-receive\n# 使用vim编辑\nvim post-receive\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在post-receive文件输入我们的命令行命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/bin/sh\n  \n# 打印输出\necho '======上传代码到服务器======'\n# 打开线上项目文件夹\ncd /web/www/gd168\n# 这个很重要，如果不取消的话将不能在cd的路径上进行git操作\nunset GIT_DIR\ngit pull origin master\n# 自动编译vue项目\n# npm run build\necho $(date) >> hook.log\necho '======代码更新完成======'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("保存后给post-receive文件加上运行权限")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("chmod +x post-receive\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("搞定，现在试着修改下README.md文件，然后发布上去就能看到部署效果了。没毛病，妥妥的！\n"),a("img",{attrs:{src:t(498),alt:""}})]),s._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),a("p",[s._v("因为是第一次写文章，怕大家看不明白，码文章的过程中还一步步重新走了遍流程，大概……应该……是写得很详细了吧。这些都是我遇到的坑，如果还有啥不妥的地方希望大家能够谅解，有什么不对或不够好的地方希望能联系我修改下，最怕耽误了你们宝贵的青春。带歪车就不好了，新手上路，嘿嘿。")])])}),[],!1,null,null,null);e.default=n.exports}}]);